[gd_scene load_steps=5 format=3 uid="uid://fgndnl5srime"]

[ext_resource type="Script" path="res://GaussianAsset/Gaussian/Gaussian.gd" id="1_ytkon"]

[sub_resource type="Shader" id="Shader_tcy4u"]
code = "shader_type spatial;

uniform vec3 color;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	// Called for every pixel the material is visible on.
	ALBEDO = color;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jtx1r"]
render_priority = 0
shader = SubResource("Shader_tcy4u")
shader_parameter/color = Vector3(0, 0, 0)

[sub_resource type="PlaneMesh" id="PlaneMesh_p5rv8"]
material = SubResource("ShaderMaterial_jtx1r")

[node name="Gaussian" type="Node3D"]
script = ExtResource("1_ytkon")
color = Color(0.666882, 0.000117632, 0.583753, 1)

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("PlaneMesh_p5rv8")
